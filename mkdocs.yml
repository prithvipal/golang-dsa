site_name: Data Structures and Algorithms using Golang
nav:
    - Home: index.md
    - Simple:
        - Count Digits: simple/count_digit.md
        - Palindrome Numbers: simple/palindrome_numbers.md
        - Factorial of A Number: simple/factorial_of_number.md
        - Trailing Zeros in Factorial: simple/trailing_zeros_in_factorial.md
        - Greatest Common Divisor: simple/greatest_common_divisor.md
        - LCM of Two Numbers:  simple/lcm_of_two_numbers.md
        - Check for Prime:  simple/check_for_prime.md
        - Prime Factors:  simple/prime_factors.md
        - All Divisors Of A Number:  simple/all_divisors_of_a_number.md
        - Sieve of Eratosthenes:  simple/sieve_of_eratosthenes.md
        - Computing Power(x,n):  simple/computing_power_x_n.md
        - Iterative Power (Binary Exponentiation):  simple/iterative_power_binary_exponentiation.md
    - String:
        - String is Palindrom: string/palindrom.md
        - String is Pangram: string/pangram.md
        - Strign is Anagram: string/anagram.md
        - Word cound in paragraph: string/word_count.md
        - Max n Occurance of Word in Paragraph: string/max_word_n_count.md
        - All Permutation of A String: string/all_permutation.md
        - All subsequence of A string: string/subsequence.md
    - Arrays:
        - Introduction: array/intro.md
        - Operation in Array: array/operations.md
        - Largest Element in Array: array/largest_element.md
        - Second Largest Element in Array: array/second_largest_element.md
        - Check If Array is Sorted: array/is_array_sorted.md
        - Reverse an Array: array/reverse_array.md
        - Remove Duplicate from Sorted Array: array/remove_duplicates_from_sorted_array.md
        - Remove Duplicate from Unsorted Array: array/remove_duplicates_from_unsorted_array.md
        - Move All Zeroes to End: array/move_all_zeroes_to_end.md
        - Left Rotate Array by One: array/left_rotate_array_by_one.md
        - Left Rotate Array by d:  array/left_rotate_array_by_d.md
        - Leaders in Array: array/leaders_in_array.md
        - Maximum Difference: array/maximum_difference.md
        - Frequency in Sorted Array: array/frequency_sorted_array.md
        - Sum of All Pair in Sorted Array is Equal to Given Number: array/sum_of_all_pair_in_sorted_array_is_equal_to_given_number.md
        - Intersection of Two Sorted Array: array/intersection_of_two_sorted_array.md
        - Union of Two Sorted Array: array/union_of_two_sorted_array.md
        - Count Inversion in An Array: array/count_inversion_in_array.md
    - Searching:
        - Binary Search: searching/binary_search.md
        - First Occurance in Sorted Array: searching/first_occu.md
        - Last Occurance in Sorted Array: searching/last_occu.md
        - Count Occurance in Sorted Array: searching/count_occu.md
        - Count 1's in Sorted Array: searching/cound_ones.md
        - Square Root: searching/sqr_root.md
        - Find Possition of Missing Number: searching/find_possition_missing_number.md
        - Find in Sorted Rotated Array: searching/find_in_sorted_rotated_array.md
        - Find a Pair With Given Sum: searching/find_a_pair_with_given_sum.md
    - Sorting:
        - Introduction: sorting/introduction.md
        - Bubble Sort: sorting/bubble_sort.md
        - Selection Sort: sorting/selection_sort.md
        - Insertion Sort: sorting/insertion_sort.md
        - Merge Sort: sorting/merge_sort.md
        - Quick Sort: sorting/quick_sort.md
    - Linked List:
        - Delete Middle Element of Singly Linked List: linked_list/delete_middle_ele_linked_list.md
        - Reverse A Singly Linked List: linked_list/reserve_singly_linked_list.md
        - Add One in Lisked List Digit: linked_list/add_one_linked_list_digit.md
    - Concurrency:
        - Print Odd and Even Sequentially using goroutine: concurrency/print_odd_even_sequentially.md
    - Tree:
        - Traversal: tree/traversal.md
        - Heigth Of Tree: tree/height.md
    - Binary Search Tree(BST):
        - Search: bst/search.md
        - Insert: bst/insert.md
        - Delete: bst/delete.md
        - Floor of Number: bst/floor.md
        - Ceil of Number: bst/ceil.md
        - Second Largest Number from Given Number: bst/second_largest_number_from_given_number.md
    - Greedy Algorithms:
        - Max Coin: greedy/max_coin.md
        - Max Activity: greedy/max_activity.md
        - Fraction Knapsack: greedy/fraction_knapsack.md
        - Job Sequence: greedy/job_sequence.md
    - Heap: 
        - Heap: heap/heap.md
        - Descrease Key: heap/descrease_key.md
        - Delete Element: heap/delete_ele.md
        - Build Heap: heap/build_heap.md
        - Heap Sort: heap/heap_sort.md
        - Sort K Sorted Array: heap/sort_k_sorted_array.md
        - Buy Maximum Items by Given Sum: heap/buy_max_items.md
        - K Largest Elements: heap/k_largest_numbers.md
        - K Closest Elements: heap/k_closest_elements.md
    - About Author: about.md
theme: material
